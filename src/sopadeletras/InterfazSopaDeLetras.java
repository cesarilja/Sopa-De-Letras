/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sopadeletras;

import javax.swing.JOptionPane;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;       
import sopadeletras.Diccionario;
import sopadeletras.Tablero;

/**
 *
 * @author Dell
 */
public class InterfazSopaDeLetras extends javax.swing.JFrame {
    private Diccionario diccionario;
    private Tablero tablero;             

    public InterfazSopaDeLetras() {
        initComponents();
        this.diccionario = new Diccionario();
        this.tablero = null;              

        
        CargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarArchivoActionPerformed(evt);
            }
        });
    }

    private void cargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
                String linea;
                boolean leyendoDiccionario = false;
                boolean leyendoTablero = false;
                diccionario = new Diccionario();
                char[][] letrasTablero = new char[4][4];
                int filaTablero = 0;

                while ((linea = br.readLine()) != null) {
                    linea = linea.trim();
                    if (linea.equalsIgnoreCase("dic")) {
                        leyendoDiccionario = true;
                        continue;
                    }
                    if (linea.equalsIgnoreCase("/dic")) {
                        leyendoDiccionario = false;
                        continue;
                    }
                    if (linea.equalsIgnoreCase("tab")) {
                        leyendoTablero = true;
                        continue;
                    }
                    if (linea.equalsIgnoreCase("/tab")) {
                        leyendoTablero = false;
                        continue;
                    }

                    if (leyendoDiccionario && !linea.isEmpty()) {
                        diccionario.agregarPalabra(linea);
                    }
                    if (leyendoTablero && !linea.isEmpty()) {
                        // Se espera una l√≠nea con 16 letras separadas por coma
                        String[] letras = linea.split(",");
                        if (letras.length != 16) {
                            JOptionPane.showMessageDialog(this, "Error: El tablero debe tener 16 letras.", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        int idx = 0;
                        for (int i = 0; i < 4; i++) {
                            for (int j = 0; j < 4; j++) {
                                letrasTablero[i][j] = letras[idx++].trim().charAt(0);
                            }
                        }
                    }
                }

                tablero = new Tablero(letrasTablero);

                // Mostrar tablero en la interfaz
                AreaTablero.setText(tablero.tableroComoTexto());
                AreaResultado.setText("Archivo cargado correctamente. Diccionario y tablero listos.\n");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error en el formato del archivo: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTablero = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaResultado = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        TextoPalabra = new javax.swing.JTextField();
        CargarArchivo = new javax.swing.JButton();
        BuscarPalabra = new javax.swing.JButton();
        BuscarTodasDFS = new javax.swing.JButton();
        BuscarTodasBFS = new javax.swing.JButton();
        GuardarDiccionario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        jLabel1.setText("TABLERO DE LETRAS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, -1));

        AreaTablero.setColumns(20);
        AreaTablero.setRows(5);
        jScrollPane1.setViewportView(AreaTablero);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 350, 220));

        jLabel2.setText("RESULTADO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, -1, -1));

        AreaResultado.setColumns(20);
        AreaResultado.setRows(5);
        jScrollPane2.setViewportView(AreaResultado);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, 280, 110));

        jLabel3.setText("INGRESE UNA PALABRA");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));
        getContentPane().add(TextoPalabra, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 180, 30));

        CargarArchivo.setText("CARGAR ARCHIVO");
        CargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarArchivoActionPerformed(evt);
            }
        });
        getContentPane().add(CargarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, -1, -1));

        BuscarPalabra.setText("BUSCAR PALABRA");
        BuscarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarPalabraActionPerformed(evt);
            }
        });
        getContentPane().add(BuscarPalabra, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, -1, -1));

        BuscarTodasDFS.setText("BUSCAR TODAS  (DFS)");
        BuscarTodasDFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarTodasDFSActionPerformed(evt);
            }
        });
        getContentPane().add(BuscarTodasDFS, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, -1, -1));

        BuscarTodasBFS.setText("BUSCAR TODAS (BFS)");
        BuscarTodasBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarTodasBFSActionPerformed(evt);
            }
        });
        getContentPane().add(BuscarTodasBFS, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, -1, -1));

        GuardarDiccionario.setText("GUARDAR EN DICCIONARIO");
        GuardarDiccionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarDiccionarioActionPerformed(evt);
            }
        });
        getContentPane().add(GuardarDiccionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarPalabraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarPalabraActionPerformed

    private void BuscarTodasDFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarTodasDFSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarTodasDFSActionPerformed

    private void GuardarDiccionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarDiccionarioActionPerformed
    String palabra = TextoPalabra.getText().trim();
    if (palabra.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una palabra para guardar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (diccionario == null){
        diccionario = new Diccionario();
    }
     boolean guardada = diccionario.agregarPalabra(palabra);
    if (guardada) {
        AreaResultado.append("Palabra agregada al diccionario: " + palabra + "\n");
    } else {
        AreaResultado.append("La palabra ya existe en el diccionario: " + palabra + "\n");
    }
    TextoPalabra.setText("");
    }//GEN-LAST:event_GuardarDiccionarioActionPerformed

    private void BuscarTodasBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarTodasBFSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarTodasBFSActionPerformed

    private void CargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CargarArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazSopaDeLetras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazSopaDeLetras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazSopaDeLetras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazSopaDeLetras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazSopaDeLetras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaResultado;
    private javax.swing.JTextArea AreaTablero;
    private javax.swing.JButton BuscarPalabra;
    private javax.swing.JButton BuscarTodasBFS;
    private javax.swing.JButton BuscarTodasDFS;
    private javax.swing.JButton CargarArchivo;
    private javax.swing.JButton GuardarDiccionario;
    private javax.swing.JTextField TextoPalabra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
